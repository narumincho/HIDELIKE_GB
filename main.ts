const fontData = [
  [0x0041, "00183C24667E6600"],
  [0x0042, "007C62627C627C00"],
  [0x0043, "003C726060723C00"],
  [0x0044, "0078646666647800"],
  [0x0045, "007E60607C607E00"],
  [0x0046, "007E7E6078606000"],
  [0x0047, "003C62606E663E00"],
  [0x0048, "006666667E666600"],
  [0x0049, "003C3C1818183C00"],
  [0x004a, "003E3E0C4C4C3800"],
  [0x004b, "00666C78786C6600"],
  [0x004c, "00606060607C7C00"],
  [0x004d, "0042667E5A424200"],
  [0x004e, "0062727A6E666200"],
  [0x004f, "003C666666663C00"],
  [0x0050, "007C62627C606000"],
  [0x0051, "003C66666A643A00"],
  [0x0052, "007C62627C686600"],
  [0x0053, "003C66603C463C00"],
  [0x0054, "007E7E1818181800"],
  [0x0055, "0066666666663C00"],
  [0x0056, "00666624243C1800"],
  [0x0057, "0042425A7E664200"],
  [0x0058, "0066241838644600"],
  [0x0059, "0066663C18181800"],
  [0x005a, "007E7E0C18307E00"],
  [0x0030, "003C666E76663C00"],
  [0x0031, "0018385818187E00"],
  [0x0032, "003C62021C307E00"],
  [0x0033, "003C46061C463C00"],
  [0x0034, "001C2C4C7E0C0C00"],
  [0x0035, "007E607C06463C00"],
  [0x0036, "003C607C62623C00"],
  [0x0037, "007E66040C081800"],
  [0x0038, "003C66663C663C00"],
  [0x0039, "003C46463E463C00"],
  [0x0061, "00003A6664643A00"],
  [0x0062, "0060607C66667C00"],
  [0x0063, "00003C6260623C00"],
  [0x0064, "0006063E66663E00"],
  [0x0065, "000038647C603800"],
  [0x0066, "000C1A183C181800"],
  [0x0067, "00003E643C4C3800"],
  [0x0068, "0060607C66666600"],
  [0x0069, "0018001818181800"],
  [0x006a, "000C000C0C4C3800"],
  [0x006b, "0060666E706C6600"],
  [0x006c, "0038381818181800"],
  [0x006d, "00003C7E6A6A6A00"],
  [0x006e, "00007C6666666600"],
  [0x006f, "00003C6666663C00"],
  [0x0070, "00007C66667C6000"],
  [0x0071, "00003E66663E0600"],
  [0x0072, "0000666E70606000"],
  [0x0073, "00003C703C063C00"],
  [0x0074, "0018183C181A0C00"],
  [0x0075, "0000666666663A00"],
  [0x0076, "00006666663C1800"],
  [0x0077, "0000626A6A7E3C00"],
  [0x0078, "0000663C183C6600"],
  [0x0079, "000066663E063C00"],
  [0x007a, "00007E6C18367E00"],
  [0x005b, "0078606060607800"],
  [0x005d, "001E060606061E00"],
  [0x002d, "0000007E7E000000"],
  [0xe2b1, "007E7E7E7E7E7E00"],
  [0x0021, "0018181818001800"],
  [0xe214, "00182C6E623C1800"],
  [0x0028, "0018302020301800"],
  [0x0029, "00180C04040C1800"],
  [0x003a, "0000180000180000"],
  [0x0040, "003C625A54683C00"],
  [0x003f, "003C464618001800"],
] as const;

const canvas = document.createElement("canvas");
document.body.appendChild(canvas);
canvas.style.imageRendering = "pixelated";
const width = fontData.length * 8;
const height = 8;
canvas.width = width;
canvas.height = height;
const canvasContext = canvas.getContext("2d") as CanvasRenderingContext2D;
const imageData = canvasContext.createImageData(width, height);

for (let c = 0; c < fontData.length; c += 1) {
  const target = fontData[c]?.[1];
  if (target === undefined) {
    throw new Error("フォントの中身を取れなかった");
  }
  for (let y = 0; y < 8; y += 1) {
    const row = Number.parseInt(target.slice(y * 2, y * 2 + 2), 16);
    for (let x = 0; x < 8; x += 1) {
      const offset = y * imageData.width + (c * 8 + x);
      const isDot = ((row >> (8 - x)) & 1) === 1;
      // R
      imageData.data[offset * 4 + 0] = isDot ? 127 : 255;
      // G
      imageData.data[offset * 4 + 1] = isDot ? 127 : 127;
      // B
      imageData.data[offset * 4 + 2] = isDot ? 127 : 127;
      // A
      imageData.data[offset * 4 + 3] = isDot ? 255 : 0;
    }
  }
}

canvasContext.putImageData(imageData, 0, 0);
